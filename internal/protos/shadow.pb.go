// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v3.12.4
// source: shadow.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SSH_ENABLE int32

const (
	SSH_ENABLE_DISABLE SSH_ENABLE = 0
	SSH_ENABLE_ENABLE  SSH_ENABLE = 1
)

// Enum value maps for SSH_ENABLE.
var (
	SSH_ENABLE_name = map[int32]string{
		0: "DISABLE",
		1: "ENABLE",
	}
	SSH_ENABLE_value = map[string]int32{
		"DISABLE": 0,
		"ENABLE":  1,
	}
)

func (x SSH_ENABLE) Enum() *SSH_ENABLE {
	p := new(SSH_ENABLE)
	*p = x
	return p
}

func (x SSH_ENABLE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SSH_ENABLE) Descriptor() protoreflect.EnumDescriptor {
	return file_shadow_proto_enumTypes[0].Descriptor()
}

func (SSH_ENABLE) Type() protoreflect.EnumType {
	return &file_shadow_proto_enumTypes[0]
}

func (x SSH_ENABLE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SSH_ENABLE.Descriptor instead.
func (SSH_ENABLE) EnumDescriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{0}
}

type CONTROL_MODE int32

const (
	CONTROL_MODE_MANUAL CONTROL_MODE = 0
	CONTROL_MODE_AUTO   CONTROL_MODE = 1
)

// Enum value maps for CONTROL_MODE.
var (
	CONTROL_MODE_name = map[int32]string{
		0: "MANUAL",
		1: "AUTO",
	}
	CONTROL_MODE_value = map[string]int32{
		"MANUAL": 0,
		"AUTO":   1,
	}
)

func (x CONTROL_MODE) Enum() *CONTROL_MODE {
	p := new(CONTROL_MODE)
	*p = x
	return p
}

func (x CONTROL_MODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CONTROL_MODE) Descriptor() protoreflect.EnumDescriptor {
	return file_shadow_proto_enumTypes[1].Descriptor()
}

func (CONTROL_MODE) Type() protoreflect.EnumType {
	return &file_shadow_proto_enumTypes[1]
}

func (x CONTROL_MODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CONTROL_MODE.Descriptor instead.
func (CONTROL_MODE) EnumDescriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{1}
}

type MissionRunType int32

const (
	MissionRunType_MISSION_RUN_TYPE_UNSPECIFIED MissionRunType = 0
	MissionRunType_MISSION_RUN_TYPE_IMMEDIATE   MissionRunType = 1
	MissionRunType_MISSION_RUN_TYPE_RECURRING   MissionRunType = 2
)

// Enum value maps for MissionRunType.
var (
	MissionRunType_name = map[int32]string{
		0: "MISSION_RUN_TYPE_UNSPECIFIED",
		1: "MISSION_RUN_TYPE_IMMEDIATE",
		2: "MISSION_RUN_TYPE_RECURRING",
	}
	MissionRunType_value = map[string]int32{
		"MISSION_RUN_TYPE_UNSPECIFIED": 0,
		"MISSION_RUN_TYPE_IMMEDIATE":   1,
		"MISSION_RUN_TYPE_RECURRING":   2,
	}
)

func (x MissionRunType) Enum() *MissionRunType {
	p := new(MissionRunType)
	*p = x
	return p
}

func (x MissionRunType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionRunType) Descriptor() protoreflect.EnumDescriptor {
	return file_shadow_proto_enumTypes[2].Descriptor()
}

func (MissionRunType) Type() protoreflect.EnumType {
	return &file_shadow_proto_enumTypes[2]
}

func (x MissionRunType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionRunType.Descriptor instead.
func (MissionRunType) EnumDescriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{2}
}

type MissionStatus int32

const (
	MissionStatus_MISSION_STATUS_UNSPECIFIED            MissionStatus = 0
	MissionStatus_MISSION_STATUS_PENDING                MissionStatus = 1
	MissionStatus_MISSION_STATUS_IN_PROGRESS            MissionStatus = 2
	MissionStatus_MISSION_STATUS_COMPLETED              MissionStatus = 3
	MissionStatus_MISSION_STATUS_FAILED                 MissionStatus = 4
	MissionStatus_MISSION_STATUS_CANCELLED              MissionStatus = 5
	MissionStatus_MISSION_STATUS_SKIPPED_CLIENT_OFFLINE MissionStatus = 6
)

// Enum value maps for MissionStatus.
var (
	MissionStatus_name = map[int32]string{
		0: "MISSION_STATUS_UNSPECIFIED",
		1: "MISSION_STATUS_PENDING",
		2: "MISSION_STATUS_IN_PROGRESS",
		3: "MISSION_STATUS_COMPLETED",
		4: "MISSION_STATUS_FAILED",
		5: "MISSION_STATUS_CANCELLED",
		6: "MISSION_STATUS_SKIPPED_CLIENT_OFFLINE",
	}
	MissionStatus_value = map[string]int32{
		"MISSION_STATUS_UNSPECIFIED":            0,
		"MISSION_STATUS_PENDING":                1,
		"MISSION_STATUS_IN_PROGRESS":            2,
		"MISSION_STATUS_COMPLETED":              3,
		"MISSION_STATUS_FAILED":                 4,
		"MISSION_STATUS_CANCELLED":              5,
		"MISSION_STATUS_SKIPPED_CLIENT_OFFLINE": 6,
	}
)

func (x MissionStatus) Enum() *MissionStatus {
	p := new(MissionStatus)
	*p = x
	return p
}

func (x MissionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_shadow_proto_enumTypes[3].Descriptor()
}

func (MissionStatus) Type() protoreflect.EnumType {
	return &file_shadow_proto_enumTypes[3]
}

func (x MissionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionStatus.Descriptor instead.
func (MissionStatus) EnumDescriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{3}
}

type DayOfWeek int32

const (
	DayOfWeek_DAY_UNSPECIFIED DayOfWeek = 0
	DayOfWeek_SUNDAY          DayOfWeek = 1
	DayOfWeek_MONDAY          DayOfWeek = 2
	DayOfWeek_TUESDAY         DayOfWeek = 3
	DayOfWeek_WEDNESDAY       DayOfWeek = 4
	DayOfWeek_THURSDAY        DayOfWeek = 5
	DayOfWeek_FRIDAY          DayOfWeek = 6
	DayOfWeek_SATURDAY        DayOfWeek = 7
)

// Enum value maps for DayOfWeek.
var (
	DayOfWeek_name = map[int32]string{
		0: "DAY_UNSPECIFIED",
		1: "SUNDAY",
		2: "MONDAY",
		3: "TUESDAY",
		4: "WEDNESDAY",
		5: "THURSDAY",
		6: "FRIDAY",
		7: "SATURDAY",
	}
	DayOfWeek_value = map[string]int32{
		"DAY_UNSPECIFIED": 0,
		"SUNDAY":          1,
		"MONDAY":          2,
		"TUESDAY":         3,
		"WEDNESDAY":       4,
		"THURSDAY":        5,
		"FRIDAY":          6,
		"SATURDAY":        7,
	}
)

func (x DayOfWeek) Enum() *DayOfWeek {
	p := new(DayOfWeek)
	*p = x
	return p
}

func (x DayOfWeek) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DayOfWeek) Descriptor() protoreflect.EnumDescriptor {
	return file_shadow_proto_enumTypes[4].Descriptor()
}

func (DayOfWeek) Type() protoreflect.EnumType {
	return &file_shadow_proto_enumTypes[4]
}

func (x DayOfWeek) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DayOfWeek.Descriptor instead.
func (DayOfWeek) EnumDescriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{4}
}

type TimeOfDay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hours         int32                  `protobuf:"varint,1,opt,name=hours,proto3" json:"hours,omitempty"`
	Minutes       int32                  `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeOfDay) Reset() {
	*x = TimeOfDay{}
	mi := &file_shadow_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeOfDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeOfDay) ProtoMessage() {}

func (x *TimeOfDay) ProtoReflect() protoreflect.Message {
	mi := &file_shadow_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeOfDay.ProtoReflect.Descriptor instead.
func (*TimeOfDay) Descriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{0}
}

func (x *TimeOfDay) GetHours() int32 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *TimeOfDay) GetMinutes() int32 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

type WeeklySchedule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Days          []DayOfWeek            `protobuf:"varint,1,rep,packed,name=days,proto3,enum=DayOfWeek" json:"days,omitempty"`
	Time          *TimeOfDay             `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeeklySchedule) Reset() {
	*x = WeeklySchedule{}
	mi := &file_shadow_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeeklySchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklySchedule) ProtoMessage() {}

func (x *WeeklySchedule) ProtoReflect() protoreflect.Message {
	mi := &file_shadow_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklySchedule.ProtoReflect.Descriptor instead.
func (*WeeklySchedule) Descriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{1}
}

func (x *WeeklySchedule) GetDays() []DayOfWeek {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *WeeklySchedule) GetTime() *TimeOfDay {
	if x != nil {
		return x.Time
	}
	return nil
}

type RecurringConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ScheduleType:
	//
	//	*RecurringConfig_Weekly
	ScheduleType  isRecurringConfig_ScheduleType `protobuf_oneof:"schedule_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecurringConfig) Reset() {
	*x = RecurringConfig{}
	mi := &file_shadow_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecurringConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecurringConfig) ProtoMessage() {}

func (x *RecurringConfig) ProtoReflect() protoreflect.Message {
	mi := &file_shadow_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecurringConfig.ProtoReflect.Descriptor instead.
func (*RecurringConfig) Descriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{2}
}

func (x *RecurringConfig) GetScheduleType() isRecurringConfig_ScheduleType {
	if x != nil {
		return x.ScheduleType
	}
	return nil
}

func (x *RecurringConfig) GetWeekly() *WeeklySchedule {
	if x != nil {
		if x, ok := x.ScheduleType.(*RecurringConfig_Weekly); ok {
			return x.Weekly
		}
	}
	return nil
}

type isRecurringConfig_ScheduleType interface {
	isRecurringConfig_ScheduleType()
}

type RecurringConfig_Weekly struct {
	Weekly *WeeklySchedule `protobuf:"bytes,1,opt,name=weekly,proto3,oneof"`
}

func (*RecurringConfig_Weekly) isRecurringConfig_ScheduleType() {}

type MissionSchedule struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MissionId      string                 `protobuf:"bytes,1,opt,name=mission_id,json=missionId,proto3" json:"mission_id,omitempty"`
	CollectionId   string                 `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	RunType        MissionRunType         `protobuf:"varint,3,opt,name=run_type,json=runType,proto3,enum=MissionRunType" json:"run_type,omitempty"`
	Recurring      *RecurringConfig       `protobuf:"bytes,4,opt,name=recurring,proto3" json:"recurring,omitempty"`
	CreatedBy      string                 `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastExecutedAt string                 `protobuf:"bytes,7,opt,name=last_executed_at,json=lastExecutedAt,proto3" json:"last_executed_at,omitempty"`
	Status         MissionStatus          `protobuf:"varint,8,opt,name=status,proto3,enum=MissionStatus" json:"status,omitempty"`
	NextRunTime    string                 `protobuf:"bytes,9,opt,name=next_run_time,json=nextRunTime,proto3" json:"next_run_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MissionSchedule) Reset() {
	*x = MissionSchedule{}
	mi := &file_shadow_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissionSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionSchedule) ProtoMessage() {}

func (x *MissionSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_shadow_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionSchedule.ProtoReflect.Descriptor instead.
func (*MissionSchedule) Descriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{3}
}

func (x *MissionSchedule) GetMissionId() string {
	if x != nil {
		return x.MissionId
	}
	return ""
}

func (x *MissionSchedule) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *MissionSchedule) GetRunType() MissionRunType {
	if x != nil {
		return x.RunType
	}
	return MissionRunType_MISSION_RUN_TYPE_UNSPECIFIED
}

func (x *MissionSchedule) GetRecurring() *RecurringConfig {
	if x != nil {
		return x.Recurring
	}
	return nil
}

func (x *MissionSchedule) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *MissionSchedule) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MissionSchedule) GetLastExecutedAt() string {
	if x != nil {
		return x.LastExecutedAt
	}
	return ""
}

func (x *MissionSchedule) GetStatus() MissionStatus {
	if x != nil {
		return x.Status
	}
	return MissionStatus_MISSION_STATUS_UNSPECIFIED
}

func (x *MissionSchedule) GetNextRunTime() string {
	if x != nil {
		return x.NextRunTime
	}
	return ""
}

type Waypoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Quaternion orientation
	Qw float64 `protobuf:"fixed64,1,opt,name=qw,proto3" json:"qw,omitempty"`
	Qx float64 `protobuf:"fixed64,2,opt,name=qx,proto3" json:"qx,omitempty"`
	Qy float64 `protobuf:"fixed64,3,opt,name=qy,proto3" json:"qy,omitempty"`
	Qz float64 `protobuf:"fixed64,4,opt,name=qz,proto3" json:"qz,omitempty"`
	// Position
	X             float64 `protobuf:"fixed64,5,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64 `protobuf:"fixed64,6,opt,name=y,proto3" json:"y,omitempty"`
	Z             float64 `protobuf:"fixed64,7,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Waypoint) Reset() {
	*x = Waypoint{}
	mi := &file_shadow_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Waypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Waypoint) ProtoMessage() {}

func (x *Waypoint) ProtoReflect() protoreflect.Message {
	mi := &file_shadow_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Waypoint.ProtoReflect.Descriptor instead.
func (*Waypoint) Descriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{4}
}

func (x *Waypoint) GetQw() float64 {
	if x != nil {
		return x.Qw
	}
	return 0
}

func (x *Waypoint) GetQx() float64 {
	if x != nil {
		return x.Qx
	}
	return 0
}

func (x *Waypoint) GetQy() float64 {
	if x != nil {
		return x.Qy
	}
	return 0
}

func (x *Waypoint) GetQz() float64 {
	if x != nil {
		return x.Qz
	}
	return 0
}

func (x *Waypoint) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Waypoint) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Waypoint) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

type MissionDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Waypoints     []*Waypoint            `protobuf:"bytes,1,rep,name=waypoints,proto3" json:"waypoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MissionDetails) Reset() {
	*x = MissionDetails{}
	mi := &file_shadow_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionDetails) ProtoMessage() {}

func (x *MissionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_shadow_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionDetails.ProtoReflect.Descriptor instead.
func (*MissionDetails) Descriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{5}
}

func (x *MissionDetails) GetWaypoints() []*Waypoint {
	if x != nil {
		return x.Waypoints
	}
	return nil
}

type Shadow struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	SshSetting             SSH_ENABLE             `protobuf:"varint,1,opt,name=sshSetting,proto3,enum=SSH_ENABLE" json:"sshSetting,omitempty"`
	Battery                float32                `protobuf:"fixed32,2,opt,name=battery,proto3" json:"battery,omitempty"`
	InUse                  bool                   `protobuf:"varint,3,opt,name=inUse,proto3" json:"inUse,omitempty"`
	NetworkQuality         float32                `protobuf:"fixed32,4,opt,name=networkQuality,proto3" json:"networkQuality,omitempty"`
	SystemOk               bool                   `protobuf:"varint,5,opt,name=systemOk,proto3" json:"systemOk,omitempty"`
	FailSafe               bool                   `protobuf:"varint,6,opt,name=failSafe,proto3" json:"failSafe,omitempty"`
	Mode                   CONTROL_MODE           `protobuf:"varint,7,opt,name=mode,proto3,enum=CONTROL_MODE" json:"mode,omitempty"`
	EmergencyButtonPressed bool                   `protobuf:"varint,12,opt,name=emergencyButtonPressed,proto3" json:"emergencyButtonPressed,omitempty"`
	MissionSchedule        *MissionSchedule       `protobuf:"bytes,13,opt,name=missionSchedule,proto3" json:"missionSchedule,omitempty"`
	MissionDetails         *MissionDetails        `protobuf:"bytes,14,opt,name=missionDetails,proto3" json:"missionDetails,omitempty"`
	MapFound               bool                   `protobuf:"varint,15,opt,name=mapFound,proto3" json:"mapFound,omitempty"`
	SlamRunning            bool                   `protobuf:"varint,16,opt,name=slamRunning,proto3" json:"slamRunning,omitempty"`
	CartoRunning           bool                   `protobuf:"varint,17,opt,name=cartoRunning,proto3" json:"cartoRunning,omitempty"`
	NavstackRunning        bool                   `protobuf:"varint,18,opt,name=navstackRunning,proto3" json:"navstackRunning,omitempty"`
	MapId                  string                 `protobuf:"bytes,19,opt,name=mapId,proto3" json:"mapId,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Shadow) Reset() {
	*x = Shadow{}
	mi := &file_shadow_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Shadow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shadow) ProtoMessage() {}

func (x *Shadow) ProtoReflect() protoreflect.Message {
	mi := &file_shadow_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shadow.ProtoReflect.Descriptor instead.
func (*Shadow) Descriptor() ([]byte, []int) {
	return file_shadow_proto_rawDescGZIP(), []int{6}
}

func (x *Shadow) GetSshSetting() SSH_ENABLE {
	if x != nil {
		return x.SshSetting
	}
	return SSH_ENABLE_DISABLE
}

func (x *Shadow) GetBattery() float32 {
	if x != nil {
		return x.Battery
	}
	return 0
}

func (x *Shadow) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

func (x *Shadow) GetNetworkQuality() float32 {
	if x != nil {
		return x.NetworkQuality
	}
	return 0
}

func (x *Shadow) GetSystemOk() bool {
	if x != nil {
		return x.SystemOk
	}
	return false
}

func (x *Shadow) GetFailSafe() bool {
	if x != nil {
		return x.FailSafe
	}
	return false
}

func (x *Shadow) GetMode() CONTROL_MODE {
	if x != nil {
		return x.Mode
	}
	return CONTROL_MODE_MANUAL
}

func (x *Shadow) GetEmergencyButtonPressed() bool {
	if x != nil {
		return x.EmergencyButtonPressed
	}
	return false
}

func (x *Shadow) GetMissionSchedule() *MissionSchedule {
	if x != nil {
		return x.MissionSchedule
	}
	return nil
}

func (x *Shadow) GetMissionDetails() *MissionDetails {
	if x != nil {
		return x.MissionDetails
	}
	return nil
}

func (x *Shadow) GetMapFound() bool {
	if x != nil {
		return x.MapFound
	}
	return false
}

func (x *Shadow) GetSlamRunning() bool {
	if x != nil {
		return x.SlamRunning
	}
	return false
}

func (x *Shadow) GetCartoRunning() bool {
	if x != nil {
		return x.CartoRunning
	}
	return false
}

func (x *Shadow) GetNavstackRunning() bool {
	if x != nil {
		return x.NavstackRunning
	}
	return false
}

func (x *Shadow) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

var File_shadow_proto protoreflect.FileDescriptor

var file_shadow_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x68,
	0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x0e, 0x57,
	0x65, 0x65, 0x6b, 0x6c, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x44, 0x61,
	0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x1e, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4d, 0x0a,
	0x0f, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x29, 0x0a, 0x06, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xe5, 0x02, 0x0a,
	0x0f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x75, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x08, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x71, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x71, 0x77,
	0x12, 0x0e, 0x0a, 0x02, 0x71, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x71, 0x78,
	0x12, 0x0e, 0x0a, 0x02, 0x71, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x71, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x71, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x71, 0x7a,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01,
	0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x22, 0x39, 0x0a, 0x0e, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x09,
	0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x77, 0x61, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xb7, 0x04, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77,
	0x12, 0x2b, 0x0a, 0x0a, 0x73, 0x73, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x53, 0x53, 0x48, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c,
	0x45, 0x52, 0x0a, 0x73, 0x73, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x53, 0x61, 0x66, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x53, 0x61, 0x66, 0x65, 0x12, 0x21, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x36, 0x0a, 0x16, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x16, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0f, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x0f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x61, 0x70, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x6d, 0x61, 0x70, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6c, 0x61,
	0x6d, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x73, 0x6c, 0x61, 0x6d, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x61, 0x72, 0x74, 0x6f, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x28, 0x0a, 0x0f, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70,
	0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x2a,
	0x25, 0x0a, 0x0a, 0x53, 0x53, 0x48, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x4e,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x2a, 0x24, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f,
	0x4c, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x01, 0x2a, 0x72, 0x0a, 0x0e,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x1c, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x55, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x45, 0x10, 0x01,
	0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x55, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x55, 0x52, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x2a, 0xed, 0x01, 0x0a, 0x0d, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1e,
	0x0a, 0x1a, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x1c,
	0x0a, 0x18, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x29, 0x0a, 0x25, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x06,
	0x2a, 0x7c, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x13, 0x0a,
	0x0f, 0x44, 0x41, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x55, 0x4e, 0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x4f, 0x4e, 0x44, 0x41, 0x59, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x55,
	0x45, 0x53, 0x44, 0x41, 0x59, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45, 0x44, 0x4e, 0x45,
	0x53, 0x44, 0x41, 0x59, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x55, 0x52, 0x53, 0x44,
	0x41, 0x59, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x49, 0x44, 0x41, 0x59, 0x10, 0x06,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x41, 0x54, 0x55, 0x52, 0x44, 0x41, 0x59, 0x10, 0x07, 0x42, 0x11,
	0x5a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shadow_proto_rawDescOnce sync.Once
	file_shadow_proto_rawDescData = file_shadow_proto_rawDesc
)

func file_shadow_proto_rawDescGZIP() []byte {
	file_shadow_proto_rawDescOnce.Do(func() {
		file_shadow_proto_rawDescData = protoimpl.X.CompressGZIP(file_shadow_proto_rawDescData)
	})
	return file_shadow_proto_rawDescData
}

var file_shadow_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_shadow_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_shadow_proto_goTypes = []any{
	(SSH_ENABLE)(0),         // 0: SSH_ENABLE
	(CONTROL_MODE)(0),       // 1: CONTROL_MODE
	(MissionRunType)(0),     // 2: MissionRunType
	(MissionStatus)(0),      // 3: MissionStatus
	(DayOfWeek)(0),          // 4: DayOfWeek
	(*TimeOfDay)(nil),       // 5: TimeOfDay
	(*WeeklySchedule)(nil),  // 6: WeeklySchedule
	(*RecurringConfig)(nil), // 7: RecurringConfig
	(*MissionSchedule)(nil), // 8: MissionSchedule
	(*Waypoint)(nil),        // 9: Waypoint
	(*MissionDetails)(nil),  // 10: MissionDetails
	(*Shadow)(nil),          // 11: Shadow
}
var file_shadow_proto_depIdxs = []int32{
	4,  // 0: WeeklySchedule.days:type_name -> DayOfWeek
	5,  // 1: WeeklySchedule.time:type_name -> TimeOfDay
	6,  // 2: RecurringConfig.weekly:type_name -> WeeklySchedule
	2,  // 3: MissionSchedule.run_type:type_name -> MissionRunType
	7,  // 4: MissionSchedule.recurring:type_name -> RecurringConfig
	3,  // 5: MissionSchedule.status:type_name -> MissionStatus
	9,  // 6: MissionDetails.waypoints:type_name -> Waypoint
	0,  // 7: Shadow.sshSetting:type_name -> SSH_ENABLE
	1,  // 8: Shadow.mode:type_name -> CONTROL_MODE
	8,  // 9: Shadow.missionSchedule:type_name -> MissionSchedule
	10, // 10: Shadow.missionDetails:type_name -> MissionDetails
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_shadow_proto_init() }
func file_shadow_proto_init() {
	if File_shadow_proto != nil {
		return
	}
	file_shadow_proto_msgTypes[2].OneofWrappers = []any{
		(*RecurringConfig_Weekly)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shadow_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shadow_proto_goTypes,
		DependencyIndexes: file_shadow_proto_depIdxs,
		EnumInfos:         file_shadow_proto_enumTypes,
		MessageInfos:      file_shadow_proto_msgTypes,
	}.Build()
	File_shadow_proto = out.File
	file_shadow_proto_rawDesc = nil
	file_shadow_proto_goTypes = nil
	file_shadow_proto_depIdxs = nil
}
