// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v3.12.4
// source: navstack.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunNavStackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunNavStackRequest) Reset() {
	*x = RunNavStackRequest{}
	mi := &file_navstack_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunNavStackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunNavStackRequest) ProtoMessage() {}

func (x *RunNavStackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunNavStackRequest.ProtoReflect.Descriptor instead.
func (*RunNavStackRequest) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{0}
}

type RunNavStackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunNavStackResponse) Reset() {
	*x = RunNavStackResponse{}
	mi := &file_navstack_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunNavStackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunNavStackResponse) ProtoMessage() {}

func (x *RunNavStackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunNavStackResponse.ProtoReflect.Descriptor instead.
func (*RunNavStackResponse) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{1}
}

func (x *RunNavStackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RunNavStackResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RunSlamToolboxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunSlamToolboxRequest) Reset() {
	*x = RunSlamToolboxRequest{}
	mi := &file_navstack_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunSlamToolboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSlamToolboxRequest) ProtoMessage() {}

func (x *RunSlamToolboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSlamToolboxRequest.ProtoReflect.Descriptor instead.
func (*RunSlamToolboxRequest) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{2}
}

type RunSlamToolboxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunSlamToolboxResponse) Reset() {
	*x = RunSlamToolboxResponse{}
	mi := &file_navstack_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunSlamToolboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSlamToolboxResponse) ProtoMessage() {}

func (x *RunSlamToolboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSlamToolboxResponse.ProtoReflect.Descriptor instead.
func (*RunSlamToolboxResponse) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{3}
}

func (x *RunSlamToolboxResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RunSlamToolboxResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RunCartographerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunCartographerRequest) Reset() {
	*x = RunCartographerRequest{}
	mi := &file_navstack_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunCartographerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCartographerRequest) ProtoMessage() {}

func (x *RunCartographerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCartographerRequest.ProtoReflect.Descriptor instead.
func (*RunCartographerRequest) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{4}
}

type RunCartographerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunCartographerResponse) Reset() {
	*x = RunCartographerResponse{}
	mi := &file_navstack_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunCartographerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCartographerResponse) ProtoMessage() {}

func (x *RunCartographerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCartographerResponse.ProtoReflect.Descriptor instead.
func (*RunCartographerResponse) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{5}
}

func (x *RunCartographerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RunCartographerResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StopNavStackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopNavStackRequest) Reset() {
	*x = StopNavStackRequest{}
	mi := &file_navstack_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopNavStackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopNavStackRequest) ProtoMessage() {}

func (x *StopNavStackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopNavStackRequest.ProtoReflect.Descriptor instead.
func (*StopNavStackRequest) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{6}
}

type StopNavStackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopNavStackResponse) Reset() {
	*x = StopNavStackResponse{}
	mi := &file_navstack_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopNavStackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopNavStackResponse) ProtoMessage() {}

func (x *StopNavStackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopNavStackResponse.ProtoReflect.Descriptor instead.
func (*StopNavStackResponse) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{7}
}

func (x *StopNavStackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopNavStackResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StopSlamToolboxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSlamToolboxRequest) Reset() {
	*x = StopSlamToolboxRequest{}
	mi := &file_navstack_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSlamToolboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSlamToolboxRequest) ProtoMessage() {}

func (x *StopSlamToolboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSlamToolboxRequest.ProtoReflect.Descriptor instead.
func (*StopSlamToolboxRequest) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{8}
}

type StopSlamToolboxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSlamToolboxResponse) Reset() {
	*x = StopSlamToolboxResponse{}
	mi := &file_navstack_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSlamToolboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSlamToolboxResponse) ProtoMessage() {}

func (x *StopSlamToolboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSlamToolboxResponse.ProtoReflect.Descriptor instead.
func (*StopSlamToolboxResponse) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{9}
}

func (x *StopSlamToolboxResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopSlamToolboxResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StopCartographerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopCartographerRequest) Reset() {
	*x = StopCartographerRequest{}
	mi := &file_navstack_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopCartographerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCartographerRequest) ProtoMessage() {}

func (x *StopCartographerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCartographerRequest.ProtoReflect.Descriptor instead.
func (*StopCartographerRequest) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{10}
}

type StopCartographerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopCartographerResponse) Reset() {
	*x = StopCartographerResponse{}
	mi := &file_navstack_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopCartographerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCartographerResponse) ProtoMessage() {}

func (x *StopCartographerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCartographerResponse.ProtoReflect.Descriptor instead.
func (*StopCartographerResponse) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{11}
}

func (x *StopCartographerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopCartographerResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetProcessStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProcessStatusRequest) Reset() {
	*x = GetProcessStatusRequest{}
	mi := &file_navstack_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProcessStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessStatusRequest) ProtoMessage() {}

func (x *GetProcessStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessStatusRequest.ProtoReflect.Descriptor instead.
func (*GetProcessStatusRequest) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{12}
}

type GetProcessStatusResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	NavStackRunning     bool                   `protobuf:"varint,1,opt,name=navStackRunning,proto3" json:"navStackRunning,omitempty"`
	SlamToolboxRunning  bool                   `protobuf:"varint,2,opt,name=slamToolboxRunning,proto3" json:"slamToolboxRunning,omitempty"`
	CartographerRunning bool                   `protobuf:"varint,3,opt,name=cartographerRunning,proto3" json:"cartographerRunning,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetProcessStatusResponse) Reset() {
	*x = GetProcessStatusResponse{}
	mi := &file_navstack_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProcessStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessStatusResponse) ProtoMessage() {}

func (x *GetProcessStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessStatusResponse.ProtoReflect.Descriptor instead.
func (*GetProcessStatusResponse) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{13}
}

func (x *GetProcessStatusResponse) GetNavStackRunning() bool {
	if x != nil {
		return x.NavStackRunning
	}
	return false
}

func (x *GetProcessStatusResponse) GetSlamToolboxRunning() bool {
	if x != nil {
		return x.SlamToolboxRunning
	}
	return false
}

func (x *GetProcessStatusResponse) GetCartographerRunning() bool {
	if x != nil {
		return x.CartographerRunning
	}
	return false
}

type NewMethodRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewMethodRequest) Reset() {
	*x = NewMethodRequest{}
	mi := &file_navstack_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMethodRequest) ProtoMessage() {}

func (x *NewMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMethodRequest.ProtoReflect.Descriptor instead.
func (*NewMethodRequest) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{14}
}

type NewMethodResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProcessStatuses []bool                 `protobuf:"varint,1,rep,packed,name=processStatuses,proto3" json:"processStatuses,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NewMethodResponse) Reset() {
	*x = NewMethodResponse{}
	mi := &file_navstack_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMethodResponse) ProtoMessage() {}

func (x *NewMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_navstack_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMethodResponse.ProtoReflect.Descriptor instead.
func (*NewMethodResponse) Descriptor() ([]byte, []int) {
	return file_navstack_proto_rawDescGZIP(), []int{15}
}

func (x *NewMethodResponse) GetProcessStatuses() []bool {
	if x != nil {
		return x.ProcessStatuses
	}
	return nil
}

var File_navstack_proto protoreflect.FileDescriptor

var file_navstack_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x75,
	0x6e, 0x4e, 0x61, 0x76, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x45, 0x0a, 0x13, 0x52, 0x75, 0x6e, 0x4e, 0x61, 0x76, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x75, 0x6e, 0x53, 0x6c,
	0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x48, 0x0a, 0x16, 0x52, 0x75, 0x6e, 0x53, 0x6c, 0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x62,
	0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x75,
	0x6e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x17, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x72, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x15, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x61, 0x76, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x61,
	0x76, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x18,
	0x0a, 0x16, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6c, 0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x62, 0x6f,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x70,
	0x53, 0x6c, 0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a,
	0x0a, 0x18, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x61, 0x76, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6e, 0x61, 0x76,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x12,
	0x73, 0x6c, 0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x6c, 0x61, 0x6d, 0x54, 0x6f,
	0x6f, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x13,
	0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x63, 0x61, 0x72, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x12,
	0x0a, 0x10, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x3d, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x32, 0xc3, 0x05, 0x0a, 0x15, 0x54, 0x68, 0x6f, 0x72, 0x6e, 0x6f, 0x6c, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x21, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x4e, 0x65, 0x77,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x4e, 0x61, 0x76, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x1c, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x52, 0x75, 0x6e, 0x4e, 0x61,
	0x76, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x52, 0x75, 0x6e, 0x4e, 0x61, 0x76, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55,
	0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x53, 0x6c, 0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x62, 0x6f, 0x78,
	0x12, 0x1f, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x52, 0x75, 0x6e, 0x53,
	0x6c, 0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x52, 0x75, 0x6e,
	0x53, 0x6c, 0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x72, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6e, 0x61, 0x76,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x61, 0x76, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x1d, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4e,
	0x61, 0x76, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x61,
	0x76, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x58, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6c, 0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c,
	0x62, 0x6f, 0x78, 0x12, 0x20, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x53, 0x6c, 0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6c, 0x61, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x62, 0x6f, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x53, 0x74,
	0x6f, 0x70, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x12, 0x21,
	0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x61,
	0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x6e, 0x61, 0x76, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_navstack_proto_rawDescOnce sync.Once
	file_navstack_proto_rawDescData = file_navstack_proto_rawDesc
)

func file_navstack_proto_rawDescGZIP() []byte {
	file_navstack_proto_rawDescOnce.Do(func() {
		file_navstack_proto_rawDescData = protoimpl.X.CompressGZIP(file_navstack_proto_rawDescData)
	})
	return file_navstack_proto_rawDescData
}

var file_navstack_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_navstack_proto_goTypes = []any{
	(*RunNavStackRequest)(nil),       // 0: navstack.RunNavStackRequest
	(*RunNavStackResponse)(nil),      // 1: navstack.RunNavStackResponse
	(*RunSlamToolboxRequest)(nil),    // 2: navstack.RunSlamToolboxRequest
	(*RunSlamToolboxResponse)(nil),   // 3: navstack.RunSlamToolboxResponse
	(*RunCartographerRequest)(nil),   // 4: navstack.RunCartographerRequest
	(*RunCartographerResponse)(nil),  // 5: navstack.RunCartographerResponse
	(*StopNavStackRequest)(nil),      // 6: navstack.StopNavStackRequest
	(*StopNavStackResponse)(nil),     // 7: navstack.StopNavStackResponse
	(*StopSlamToolboxRequest)(nil),   // 8: navstack.StopSlamToolboxRequest
	(*StopSlamToolboxResponse)(nil),  // 9: navstack.StopSlamToolboxResponse
	(*StopCartographerRequest)(nil),  // 10: navstack.StopCartographerRequest
	(*StopCartographerResponse)(nil), // 11: navstack.StopCartographerResponse
	(*GetProcessStatusRequest)(nil),  // 12: navstack.GetProcessStatusRequest
	(*GetProcessStatusResponse)(nil), // 13: navstack.GetProcessStatusResponse
	(*NewMethodRequest)(nil),         // 14: navstack.NewMethodRequest
	(*NewMethodResponse)(nil),        // 15: navstack.NewMethodResponse
}
var file_navstack_proto_depIdxs = []int32{
	12, // 0: navstack.ThornolDefaultService.GetProcessStatus:input_type -> navstack.GetProcessStatusRequest
	14, // 1: navstack.ThornolDefaultService.NewMethod:input_type -> navstack.NewMethodRequest
	0,  // 2: navstack.ThornolDefaultService.RunNavStack:input_type -> navstack.RunNavStackRequest
	2,  // 3: navstack.ThornolDefaultService.RunSlamToolbox:input_type -> navstack.RunSlamToolboxRequest
	4,  // 4: navstack.ThornolDefaultService.RunCartographer:input_type -> navstack.RunCartographerRequest
	6,  // 5: navstack.ThornolDefaultService.StopNavStack:input_type -> navstack.StopNavStackRequest
	8,  // 6: navstack.ThornolDefaultService.StopSlamToolbox:input_type -> navstack.StopSlamToolboxRequest
	10, // 7: navstack.ThornolDefaultService.StopCartographer:input_type -> navstack.StopCartographerRequest
	13, // 8: navstack.ThornolDefaultService.GetProcessStatus:output_type -> navstack.GetProcessStatusResponse
	15, // 9: navstack.ThornolDefaultService.NewMethod:output_type -> navstack.NewMethodResponse
	1,  // 10: navstack.ThornolDefaultService.RunNavStack:output_type -> navstack.RunNavStackResponse
	3,  // 11: navstack.ThornolDefaultService.RunSlamToolbox:output_type -> navstack.RunSlamToolboxResponse
	5,  // 12: navstack.ThornolDefaultService.RunCartographer:output_type -> navstack.RunCartographerResponse
	7,  // 13: navstack.ThornolDefaultService.StopNavStack:output_type -> navstack.StopNavStackResponse
	9,  // 14: navstack.ThornolDefaultService.StopSlamToolbox:output_type -> navstack.StopSlamToolboxResponse
	11, // 15: navstack.ThornolDefaultService.StopCartographer:output_type -> navstack.StopCartographerResponse
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_navstack_proto_init() }
func file_navstack_proto_init() {
	if File_navstack_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_navstack_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_navstack_proto_goTypes,
		DependencyIndexes: file_navstack_proto_depIdxs,
		MessageInfos:      file_navstack_proto_msgTypes,
	}.Build()
	File_navstack_proto = out.File
	file_navstack_proto_rawDesc = nil
	file_navstack_proto_goTypes = nil
	file_navstack_proto_depIdxs = nil
}
